# Setting up the Server

## Prerequisites

Before proceeding, make sure you have the following:

- [ ] An AWS RDS instance set up with appropriate permissions.
- [ ] Access to AWS RDS endpoint, database name, username, and password.

## Creating the Application Properties File

1. Create a `resources` directory inside 'src/main', and inside create a new file named `application.properties`.
2. Open `application.properties` and paste the following content:

```properties
spring.datasource.url=jdbc:mysql://<RDS_ENDPOINT>:<PORT>/<DATABASE_NAME>?useSSL=false&serverTimezone=UTC
spring.datasource.username=<RDS_USERNAME>
spring.datasource.password=<RDS_PASSWORD>
spring.jpa.hibernate.ddl-auto=update
server.port=8081
server.servlet.context-path=/tutor-api

Replace the placeholders <RDS_ENDPOINT>, <PORT>, <DATABASE_NAME>, <RDS_USERNAME>, and <RDS_PASSWORD> with your actual AWS RDS details.

Note: In AWS RDS, the database name might not be assigned, in which case it usually is the name of the database. E.g., Postgres dbs would have the name postgres even though it says '-' on AWS config.